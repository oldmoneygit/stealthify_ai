#!/usr/bin/env tsx

import dotenv from 'dotenv';
import path from 'path';
import WooCommerceRestApi from '@woocommerce/woocommerce-rest-api';

// Load environment variables
dotenv.config({ path: path.join(process.cwd(), '.env.local') });

const wooApi = new WooCommerceRestApi({
  url: process.env.WOOCOMMERCE_URL!,
  consumerKey: process.env.WOOCOMMERCE_CONSUMER_KEY!,
  consumerSecret: process.env.WOOCOMMERCE_CONSUMER_SECRET!,
  version: "wc/v3",
  queryStringAuth: true
});

/**
 * üîç TESTAR PERMISS√ïES DA API KEY DO WOOCOMMERCE
 */
async function testPermissions() {
  console.log('\nüîç TESTANDO PERMISS√ïES DA API KEY');
  console.log('‚îÅ'.repeat(60));
  console.log('');

  // ============================================================
  // 1. TESTAR LEITURA (GET)
  // ============================================================
  console.log('üìñ TESTE 1/4: Leitura de produtos (GET)...\n');

  try {
    const response = await wooApi.get("products", { per_page: 1 });
    console.log('   ‚úÖ LEITURA OK - Consegue ler produtos');
    console.log(`   üì¶ Exemplo: ${response.data[0]?.name || 'N/A'}\n`);
  } catch (error: any) {
    console.log('   ‚ùå FALHOU - Sem permiss√£o de leitura');
    console.log(`   Erro: ${error.message}\n`);
  }

  // ============================================================
  // 2. TESTAR LEITURA DE PEDIDOS
  // ============================================================
  console.log('üìñ TESTE 2/4: Leitura de pedidos (GET orders)...\n');

  try {
    const response = await wooApi.get("orders", { per_page: 1 });
    console.log('   ‚úÖ LEITURA DE PEDIDOS OK');
    console.log(`   üì¶ Total de pedidos: ${response.headers['x-wp-total'] || 'N/A'}\n`);
  } catch (error: any) {
    console.log('   ‚ùå FALHOU - Sem permiss√£o de leitura de pedidos');
    console.log(`   Erro: ${error.message}\n`);
    return; // Se n√£o consegue ler, n√£o conseguir√° criar
  }

  // ============================================================
  // 3. TESTAR CRIA√á√ÉO M√çNIMA
  // ============================================================
  console.log('üìù TESTE 3/4: Cria√ß√£o de pedido (POST) - Payload M√çNIMO...\n');

  const minimalOrder = {
    billing: {
      first_name: 'Teste',
      last_name: 'API',
      email: 'teste@api.com'
    }
  };

  console.log('   Payload:', JSON.stringify(minimalOrder, null, 2));
  console.log('');

  try {
    const response = await wooApi.post("orders", minimalOrder);

    if (Array.isArray(response.data)) {
      if (response.data.length === 0) {
        console.log('   ‚ùå ARRAY VAZIO - Pedido n√£o foi criado');
        console.log('   üî¥ PROBLEMA CONFIRMADO: WooCommerce est√° bloqueando cria√ß√£o via API\n');
      } else {
        console.log('   ‚úÖ CRIA√á√ÉO OK (retornou array)');
        console.log(`   üì¶ Pedido ID: ${response.data[0].id}\n`);

        // Deletar
        await wooApi.delete(`orders/${response.data[0].id}`, { force: true });
        console.log('   üóëÔ∏è  Pedido de teste deletado\n');
      }
    } else if (response.data && response.data.id) {
      console.log('   ‚úÖ CRIA√á√ÉO OK');
      console.log(`   üì¶ Pedido ID: ${response.data.id}\n`);

      // Deletar
      await wooApi.delete(`orders/${response.data.id}`, { force: true });
      console.log('   üóëÔ∏è  Pedido de teste deletado\n');
    } else {
      console.log('   ‚ö†Ô∏è  Resposta inesperada:', response.data);
      console.log('');
    }
  } catch (error: any) {
    console.log('   ‚ùå FALHOU - Sem permiss√£o de escrita de pedidos');
    console.log(`   Status: ${error.response?.status}`);
    console.log(`   Erro: ${error.response?.data?.message || error.message}\n`);

    if (error.response?.data) {
      console.log('   üìã Detalhes:', JSON.stringify(error.response.data, null, 2));
      console.log('');
    }
  }

  // ============================================================
  // 4. VERIFICAR PERMISS√ïES DAS CREDENCIAIS
  // ============================================================
  console.log('üîê TESTE 4/4: Verificando tipo de credencial...\n');

  console.log('   üí° PARA CORRIGIR O PROBLEMA:\n');
  console.log('   1. Acesse WooCommerce Admin');
  console.log('   2. WooCommerce ‚Üí Settings ‚Üí Advanced ‚Üí REST API');
  console.log('   3. Encontre a API Key: ck_4c2b449...');
  console.log('   4. Verifique se as permiss√µes s√£o "Read/Write"\n');
  console.log('   Se estiver como "Read", MUDE para "Read/Write" e regenere a chave\n');

  console.log('‚îÅ'.repeat(60));
  console.log('');
}

testPermissions();
